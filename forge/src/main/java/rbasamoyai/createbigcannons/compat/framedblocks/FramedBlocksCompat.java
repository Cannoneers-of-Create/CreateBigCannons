package rbasamoyai.createbigcannons.compat.framedblocks;

import static rbasamoyai.createbigcannons.block_armor_properties.mimicking_blocks.AbstractMimickingBlockArmorProperties.createMimicrySerializer;

import rbasamoyai.createbigcannons.block_armor_properties.BlockArmorPropertiesHandler;
import xfacthd.framedblocks.common.FBContent;
import xfacthd.framedblocks.common.data.BlockType;

public class FramedBlocksCompat {

	public static void init() {
		registerSingleFramedBlockSerializer(BlockType.FRAMED_ACTIVATOR_RAIL_SLOPE);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_BARS);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_BOUNCY_CUBE);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_BUTTON);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_CHEST);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_CORNER_PILLAR);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_CORNER_SLOPE);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_CUBE);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_DETECTOR_RAIL_SLOPE);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_DOOR);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_ELEVATED_SLOPE_SLAB);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_EXTENDED_SLOPE_PANEL);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_FANCY_ACTIVATOR_RAIL);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_FANCY_DETECTOR_RAIL);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_FANCY_POWERED_RAIL);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_FANCY_RAIL);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_FENCE);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_FLAT_ELEV_SLOPE_SLAB_CORNER);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_FLAT_EXT_SLOPE_PANEL_CORNER);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_FLAT_INNER_SLOPE_PANEL_CORNER);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_FLAT_INNER_SLOPE_SLAB_CORNER);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_FLAT_SLOPE_PANEL_CORNER);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_FLAT_SLOPE_SLAB_CORNER);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_FLOOR_BOARD);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_FLOWER_POT);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_GATE);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_GATE_DOOR);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_GLOWING_CUBE);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_GLOWING_ITEM_FRAME);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_GOLD_PRESSURE_PLATE);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_HALF_PILLAR);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_HALF_SLOPE);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_HALF_STAIRS);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_HORIZONTAL_PANE);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_INNER_CORNER_SLOPE);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_INNER_PRISM);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_INNER_PRISM_CORNER);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_INNER_SLOPED_PRISM);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_INNER_THREEWAY_CORNER);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_IRON_DOOR);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_IRON_GATE_DOOR);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_IRON_PRESSURE_PLATE);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_IRON_TRAPDOOR);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_ITEM_FRAME);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_LADDER);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_LARGE_BUTTON);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_LARGE_STONE_BUTTON);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_LATTICE_BLOCK);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_LEVER);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_MINI_CUBE);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_OBSIDIAN_PRESSURE_PLATE);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_ONE_WAY_WINDOW);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_PANE);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_PANEL);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_PILLAR);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_POST);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_POWERED_RAIL_SLOPE);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_PRESSURE_PLATE);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_PRISM);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_PRISM_CORNER);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_PYRAMID);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_PYRAMID_SLAB);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_RAIL_SLOPE);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_REDSTONE_BLOCK);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_REDSTONE_TORCH);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_REDSTONE_WALL_TORCH);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_SECRET_STORAGE);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_SIGN);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_SLAB);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_SLAB_CORNER);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_SLAB_EDGE);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_SLOPE);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_SLOPE_PANEL);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_SLOPE_SLAB);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_SLOPED_PRISM);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_SLOPED_STAIRS);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_SOUL_TORCH);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_SOUL_WALL_TORCH);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_STAIRS);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_STONE_BUTTON);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_STONE_PRESSURE_PLATE);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_TARGET);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_THREEWAY_CORNER);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_TORCH);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_TRAPDOOR);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_VERTICAL_HALF_STAIRS);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_VERTICAL_SLOPED_STAIRS);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_VERTICAL_STAIRS);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_WALL);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_WALL_BOARD);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_WALL_SIGN);
		registerSingleFramedBlockSerializer(BlockType.FRAMED_WALL_TORCH);

		registerDoubleFramedBlockSerializer(BlockType.FRAMED_DIVIDED_PANEL_HORIZONTAL);
		registerDoubleFramedBlockSerializer(BlockType.FRAMED_DIVIDED_PANEL_VERTICAL);
		registerDoubleFramedBlockSerializer(BlockType.FRAMED_DIVIDED_SLAB);
		registerDoubleFramedBlockSerializer(BlockType.FRAMED_DIVIDED_SLOPE);
		registerDoubleFramedBlockSerializer(BlockType.FRAMED_DIVIDED_STAIRS);
		registerDoubleFramedBlockSerializer(BlockType.FRAMED_DOUBLE_CORNER);
		registerDoubleFramedBlockSerializer(BlockType.FRAMED_DOUBLE_HALF_SLOPE);
		registerDoubleFramedBlockSerializer(BlockType.FRAMED_DOUBLE_PANEL);
		registerDoubleFramedBlockSerializer(BlockType.FRAMED_DOUBLE_PRISM);
		registerDoubleFramedBlockSerializer(BlockType.FRAMED_DOUBLE_PRISM_CORNER);
		registerDoubleFramedBlockSerializer(BlockType.FRAMED_DOUBLE_SLAB);
		registerDoubleFramedBlockSerializer(BlockType.FRAMED_DOUBLE_SLOPE_PANEL);
		registerDoubleFramedBlockSerializer(BlockType.FRAMED_DOUBLE_SLOPE_SLAB);
		registerDoubleFramedBlockSerializer(BlockType.FRAMED_DOUBLE_SLOPED_PRISM);
		registerDoubleFramedBlockSerializer(BlockType.FRAMED_DOUBLE_STAIRS);
		registerDoubleFramedBlockSerializer(BlockType.FRAMED_DOUBLE_THREEWAY_CORNER);
		registerDoubleFramedBlockSerializer(BlockType.FRAMED_ELEVATED_DOUBLE_SLOPE_SLAB);
		registerDoubleFramedBlockSerializer(BlockType.FRAMED_EXTENDED_DOUBLE_SLOPE_PANEL);
		registerDoubleFramedBlockSerializer(BlockType.FRAMED_FANCY_ACTIVATOR_RAIL_SLOPE);
		registerDoubleFramedBlockSerializer(BlockType.FRAMED_FANCY_DETECTOR_RAIL_SLOPE);
		registerDoubleFramedBlockSerializer(BlockType.FRAMED_FANCY_POWERED_RAIL_SLOPE);
		registerDoubleFramedBlockSerializer(BlockType.FRAMED_FANCY_RAIL_SLOPE);
		registerDoubleFramedBlockSerializer(BlockType.FRAMED_FLAT_DOUBLE_SLOPE_PANEL_CORNER);
		registerDoubleFramedBlockSerializer(BlockType.FRAMED_FLAT_DOUBLE_SLOPE_SLAB_CORNER);
		registerDoubleFramedBlockSerializer(BlockType.FRAMED_FLAT_ELEV_DOUBLE_SLOPE_SLAB_CORNER);
		registerDoubleFramedBlockSerializer(BlockType.FRAMED_FLAT_ELEV_INNER_DOUBLE_SLOPE_SLAB_CORNER);
		registerDoubleFramedBlockSerializer(BlockType.FRAMED_FLAT_EXT_DOUBLE_SLOPE_PANEL_CORNER);
		registerDoubleFramedBlockSerializer(BlockType.FRAMED_FLAT_EXT_INNER_DOUBLE_SLOPE_PANEL_CORNER);
		registerDoubleFramedBlockSerializer(BlockType.FRAMED_FLAT_INV_DOUBLE_SLOPE_PANEL_CORNER);
		registerDoubleFramedBlockSerializer(BlockType.FRAMED_FLAT_INV_DOUBLE_SLOPE_SLAB_CORNER);
		registerDoubleFramedBlockSerializer(BlockType.FRAMED_FLAT_STACKED_INNER_SLOPE_PANEL_CORNER);
		registerDoubleFramedBlockSerializer(BlockType.FRAMED_FLAT_STACKED_INNER_SLOPE_SLAB_CORNER);
		registerDoubleFramedBlockSerializer(BlockType.FRAMED_FLAT_STACKED_SLOPE_PANEL_CORNER);
		registerDoubleFramedBlockSerializer(BlockType.FRAMED_FLAT_STACKED_SLOPE_SLAB_CORNER);
		registerDoubleFramedBlockSerializer(BlockType.FRAMED_INV_DOUBLE_SLOPE_PANEL);
		registerDoubleFramedBlockSerializer(BlockType.FRAMED_INV_DOUBLE_SLOPE_SLAB);
		registerDoubleFramedBlockSerializer(BlockType.FRAMED_STACKED_SLOPE_PANEL);
		registerDoubleFramedBlockSerializer(BlockType.FRAMED_STACKED_SLOPE_SLAB);
		registerDoubleFramedBlockSerializer(BlockType.FRAMED_VERTICAL_DIVIDED_STAIRS);
		registerDoubleFramedBlockSerializer(BlockType.FRAMED_VERTICAL_DOUBLE_STAIRS);
		registerDoubleFramedBlockSerializer(BlockType.FRAMED_VERTICAL_DOUBLE_HALF_SLOPE);

		BlockArmorPropertiesHandler.registerCustomSerializer(FBContent.byType(BlockType.FRAMED_COLLAPSIBLE_BLOCK), createMimicrySerializer(FramedCollapsibleBlockArmorProperties::new));
	}

	private static void registerSingleFramedBlockSerializer(BlockType block) {
		BlockArmorPropertiesHandler.registerCustomSerializer(FBContent.byType(block), createMimicrySerializer(SingleFramedBlockArmorProperties::new));
	}

	private static void registerDoubleFramedBlockSerializer(BlockType block) {
		BlockArmorPropertiesHandler.registerCustomSerializer(FBContent.byType(block), new FramedDoubleBlockArmorPropertiesSerializer());
	}

}
