architectury {
    common(rootProject.enabled_platforms.split(","))
}

loom {
    accessWidenerPath = file("src/main/resources/createbigcannons.accesswidener")
}

repositories {
    // mavens for Create Fabric and dependencies
    maven { url = "https://mvn.devos.one/#/" }
    maven { url = "https://api.modrinth.com/maven" } // LazyDFU
    maven { url = "https://maven.terraformersmc.com/releases/" } // Mod Menu
    maven { url = "https://mvn.devos.one/snapshots/" }
    // Create Fabric, Forge Tags, Milk Lib, Registrate Fabric
	maven { url = "https://mvn.devos.one/releases" } // Porting Lib Releases
	maven { url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/" } // Forge config api port
    maven { url = "https://maven.cafeteria.dev/releases" } // Fake Player API
    maven { url = "https://maven.jamieswhiteshirt.com/libs-release" } // Reach Entity Attributes
    maven { url = "https://jitpack.io/" } // Mixin Extras, Fabric ASM

	maven { // Ritchie's Projectile Library
		url = "https://maven.realrobotix.me/master/"
		content {
			includeGroup("com.rbasamoyai")
		}
	}
	flatDir {
		dir "./libs"
	}
}

dependencies {
    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation("net.fabricmc:fabric-loader:${fabric_loader_version}")
    // Compile against Create Fabric in common
    // beware of differences across platforms!
    // dependencies must also be pulled in to minimize problems, from remapping issues to compile errors.
    // All dependencies except Flywheel and Registrate are NOT safe to use!
    // Flywheel and Registrate must also be used carefully due to differences.
    modCompileOnly("com.simibubi.create:create-fabric-${minecraft_version}:${create_fabric_version}")
	modCompileOnly("net.fabricmc.fabric-api:fabric-api:${fabric_api_version}")

	annotationProcessor(implementation("io.github.llamalad7:mixinextras-common:${mixinextras_version}")) // MixinExtras

	// Ritchie's Projectile Library
	String rplSuffix = Boolean.valueOf(use_local_rpl_build) ? "" : "-build.${rpl_build}";
	modImplementation("com.rbasamoyai:ritchiesprojectilelib:${rpl_version}+mc.${minecraft_version}-common" + rplSuffix) { transitive = false }

	modImplementation("curse.maven:copycats-968398:${copycats_fabric_file}")
}
