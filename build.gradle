plugins {
	id "architectury-plugin" version "3.4-SNAPSHOT"
	id "dev.architectury.loom" version "1.5-SNAPSHOT" apply false
	id "io.github.p03w.machete" version "1.+" // automatic jar compressing on build
}

architectury {
    minecraft = rootProject.minecraft_version
}

boolean ci = System.getenv("CI") != null ? System.getenv("CI").toBoolean() : false

subprojects {
    apply plugin: "dev.architectury.loom"
    apply plugin: "maven-publish"

    loom {
        silentMojangMappingsLicense()
    }

    repositories {
        mavenCentral()
        maven { url = "https://maven.shedaniel.me/" } // Cloth Config, REI
        maven { // JEI
			url = "https://maven.blamejared.com/"
			content {
				includeGroup("mezz.jei")
			}
		}
        maven { url = "https://maven.parchmentmc.org" } // Parchment mappings
        maven { url = "https://maven.quiltmc.org/repository/release" } // Quilt Mappings
        maven { // Flywheel
            url = "https://maven.tterrag.com/"
            content {
                // need to be specific here due to version overlaps
                includeGroup("com.jozufozu.flywheel")
            }
        }
        maven { url = "https://cursemaven.com" } // Cursemaven
    }

    dependencies {
        minecraft "com.mojang:minecraft:${minecraft_version}"
        // layered mappings - Mojmap names, parchment and QM docs and parameters
        mappings(loom.layered {
            it.mappings("org.quiltmc:quilt-mappings:${minecraft_version}+build.${qm_version}:intermediary-v2")
            it.parchment("org.parchmentmc.data:parchment-${minecraft_version}:${parchment_version}@zip")
            it.officialMojangMappings { nameSyntheticMembers = false }
        })
    }
    publishing {
        publications {
            mavenJava(MavenPublication) {
				artifactId = rootProject.archives_base_name
                from components.java
            }
        }
        repositories {
            maven {
                name = "GitHubPackages"
                url = "https://maven.pkg.github.com/cannoneers-of-create/createbigcannons"
                credentials {
                    username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
                    password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
                }
            }
            maven {
                name = "realRobotixMaven"
                url = "https://maven.realrobotix.me/createbigcannons"
                credentials(PasswordCredentials)
            }
        }
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"

    archivesBaseName = rootProject.archives_base_name
    group = rootProject.group

    // Formats the mod version to include the loader, Minecraft version, and build number (if present)
    // example: 1.0.0+fabric-1.18.2-100

	String buildNumber = System.getenv("GITHUB_RUN_NUMBER")
	version = "${mod_version}+mc.${minecraft_version}-${project.name}${buildNumber ? "-build.${buildNumber}" : ""}"

    repositories {
        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html
        // for more information about repositories.
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    java {
        withSourcesJar()
    }

    machete {
        // disable machete locally for faster builds
        enabled = ci
    }
}
